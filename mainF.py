print("Hello and welcome to our story game")
#Can these statements be shortened?
print("Press 1 for Play Game")
print("Press 2 for Instructions")
print("Press 3 to Quit Application")
mainMenuSelection = int(input("Please select an option \n"))

if mainMenuSelection == (1):
    #game code here
    print("\n Does anyone know that feeling when you know something totally unexpected is \nabout to haPpen? What seemed to be the most peaceful and antisocial trip of \ntheir lives while having intriguing conversations with Tutankhamun and his \nunalive mates, took a turn which the first-year Computer Science students of \nCoventrY University would not have seen coming. It was, let’s say… quite the \nexperience.\n Fine sand, deadly heat and litTle to no humidity in the air — all seemed to \nmake arriving at the pyramids like a reward the same group of students I told \nyou about earlier would put in one of their games, after completing MMMCCLXXI \nlevels.\n When they finally entered one of the pyramids, nothing seemed to look unusual, \nexactly like what they show you in documentaries: chunks of dust, absent \ncolours, and walls full of hieroglyphs.\n “We’re now going to split into VI groups of III and explore different areas \nof the not-so-regularly-shaped-anymore pyramid. You can choose people you’re \nfriends with, but mainly focus on those whom you know least. It will allow you \nto observe everything in a better ligHt and get to know each other. Be careful. \nRemember, eyes on the ground. If you don’t see eye to eye though, negate the \nground and look up; who knows what you may stumble across?” said Simon with a \ndevilish smile on his face. Everyone has to do what Simon says. Simon says it, \nyou do it.\n\n") 
    print("« Which group would you like to go forward with?")

    branchDecision = str(input("Press A for Group A or press B for Group B. » \n"))
    if branchDecision == ("A") or branchDecision == ("a"):
        print("\n Group A decided to ascend up some narrow stairs and head towards the tip of the\npyramid where they encounter an unusual room that’s filled with catacombs of \nancient bodies that clearly date back thousands of years. Within the room, \nthere are obvious depictions of code and related logical functions imprinted on \nrocks and items that have been scattered in a disorganised manner. Arthur \nexamined one of the rocks with code on it and discovered that it could fit \nperfectly into an imprint within the wall. The group are astounded by this \nunearthing and begin to examine rocks and other scattered waste to fit into the \nwall like a complex jigsaw puzzle. Once finishing a wall of code, the group \nrealise that there is the possibility for more code to be implemented onto other\nwalls within the room each depicting a different language as well as what the \ncode implies actually occurs within the real world. The group then has a \ndecision to run the wall as either Python or C++.\n\n")
        branchDecision = str(input("« Should the group use Python or C++? » \n"))
        if branchDecision == ("Python") or branchDecision == ("python"):
                print("\n The group decide to utilise the Python wall and finally figured out the correct\nanswer to the puzzle which was: \n   gold +=20 \n   door = DoorClass() \n   door.open() \n The booming of the opening trapdoor in the floor was almost deafening and \nmassive in diameter instantly frightening all of the members of the group and \nalmost causing a few accidental falls as the jaw of the trapdoor opened wide. \nThe group decide to take a vote on whether to plunge in the darkness of the \ntrapdoor which ultimately results in a “yes” vote, they jump and fall down into \nthe inky blackness…") 
        elif branchDecision == ("C++") or branchDecision == ("c++"):
            print("\n The group decide to utilise the C++ wall and attempt to figure out the correct \nanswer to the puzzle, unfortunately they input sections of the Python code onto \nthe C++ wall which begins a massive rumbling throughout the room as rocks \nand boulders begin descending upon the group killing them in horrific ways and \ngrotesque injuries. You have chosen the wrong path.")
                
    elif branchDecision == ("B") or branchDecision == ("b"):
        print("\n Out of all the possible paths you could choose from, group IV decided to \nfollow the longest, darkest, and narrowest. Henry, Jack, and Robert were almost \nimmediately starting to regret their decision, but that was about to change in \nthe next XXX minutes, which felt like str(decades). At some point during their \nexploration, it looked like the tunnel was gaining more and more width, until\nit became sort of like a room; causing a change in everyone’s intention of what \nthey should do next. Henry was convinced they should go back and wait till \nthe other groups would make their way back, while Robert wanted to carry on and \nnot look back.\n\n")
        branchDecision = str(input("« Would you like the group to CARRY ON or GO BACK? » \n"))
        if branchDecision == ("Go back") or branchDecision == ("go back") or branchDecision == ("GO BACK") or branchDecision == ("gb"):
            print("\n In a hurry, the group decided to go back. On the way back Henry puts his hand \non the wall after losing balance, one of the stones on the wall slides inwards \nand ncauses the pythonian nightmare. Too many python snakes crawl out of gaps in\nthe wall and ceiling. One lands on Henry, which he attempts to shake off to no \navail, with the python lunging at him and biting his throat. Jack, whilst \nrunning in a sprint, trips over a python and is instantly swarmed by another, \ndevouring him in seconds. This gave Robert enough time to contemplate what his \nnext action would be. \n\n")
            branchDecision = str(input("« Should he ACCEPT HIS OWN FATE or attempt to RUN FURTHER and save his life? » \n"))
            if branchDecision == ("accept") or branchDecision == ("ACCEPT") or branchDecision == ("Accept") or branchDecision == ("Accept his own fate") or branchDecision == ("ACCEPT HIS OWN FATE") or branchDecision == ("accept his own fate") or branchDecision == ("ac"):
                print("\n Robert pondered for as long as he could in those short seconds he had to decide\nand realised that the pythons were overwhelming and attempting to block the \nexit. In this moment he accepts his death. While succumbing to his own fate, \nhe vows never to use Python again and curses the creators.")
            elif branchDecision == ("Run further") or branchDecision == ("run furher") or branchDecision == ("RUN FURHTER") or branchDecision == ("Run") or branchDecision == ("RUN") or branchDecision == ("run"):
                print("\n Robert decides to sprint as fast as his legs can carry him. Running through the\ncrumbling hallway, avoiding debris, and falling rocks, he gets hit in the arm \nby a loose rock which shatters his bones. Groaning in pain, he continues running\nwith escape being the only thought in his mind. He eventually encounters two \nchutes at a dead end. One goes deeper into the pyramid and the other goes \nupwards into darkness. \n\n")
                branchDecision = str(input("« Should Robert follow the chute that goes DEEPER into the pyramid or the one \nthat goes UPWARDS into darkness? » \n"))
                if branchDecision == ("deeper") or branchDecision == ("Deeper") or branchDecision == ("DEEPER") or branchDecision == ("dp"):
                    print("\n Robert descends into the dark passageways just as a rock covers the entrance \nbehind him, thankfully blocking the snakes from gaining access. Robert vaguely \nsees a light across the corridor, which he begins to run towards. He finds out \nthe light was an exit. Overwhelmed with joy, he clears the cobwebs in his path \nand finally breaths fresh air as the hot Egyptian sun lashes at his skin. \nHe is free although the secret of the pyramid and his other group will forever \nbe lost.")
                elif branchDecision == ("UPWARDS") or branchDecision == ("Upwards") or branchDecision == ("upwards") or branchDecision == ("DARKNESS") or branchDecision == ("Darkness") or branchDecision == ("darkness") or branchDecision == ("up"):
                    print("\n Robert ascends into the dark passageways and is surprised to encounter group A.\nHe cheerfully rejoices upon meeting his friends and attempts to help out with \nthe puzzle without realising he was still being followed by a horde of pythons. \nOffended by the C++, the snakes are sent into a frenzy, they attack everybody\nin the room leaving nothing but skeletons.")
                              
        elif branchDecision == ("Carry on") or branchDecision == ("carry on") or branchDecision == ("CARRY ON") or branchDecision == ("co"):
            print("\n Panic was driving their minds, so things escalated; clearly the situation was \ngetting out of control, due to the myriads of intense emotions accumulated. \nAll of a sudden, a light beam came through a crack in the tunnel and made \ncontact with Jack’s watch, lighting up the entire room. Jack gasped, capturing \ntheir attention and everything went quiet. It was that moment, when he realised \nthey were heading towards the same place the students had originally split up, \neven though they’d been walking a straight path. They didn’t believe Jack at \nfirst; how could they not recognise the surroundings, right? But since they were\nno longer on the same page, “What wOuld Simon do?” was the question the three \nwanted an answer to. It clicked. Henry remembered what Simon had said about not \nseeing eye to eye. The ground started shaking out of the blue. They immediately \nlooked at the ceiling, involuntarily. They were so confused; they knew something\nbig was about to happen. Other voices could be heard, increasing in volume as \nseconds were passing. So whoever it was, they were approaching fast. \nIt didn’t take group IV long to realise the voices were, in fact, those of the \nother students.")

            print("\n The roof opens up, the students from group A fell down with a few injuries. \nMore light was coming through the cracks, and the room they got to was indeed \nthe same place where they left from. Bricks started falling off the walls. \nRobert noticed the one that was falling from the highest point on the wall \ndidn’t have the typical hieroglyphs they were used to seeing since they had \ngotten there. Like, seriously, who has time to pay attention to all the bricks \nthat keep falling at you? It’s like asking for an invitation to go up there \nand meet Cleopatra in person. The fight-or-flight effect settled in. \nWhile everyone was leaving the pyramid, group IV used their adreNaline to grab \nthe heavy brick as quickly as possible and managed to get out safely. The ground\nstopped shaking once everyone was outside. After having a better look at the \nbrick they had just carried, it turns out what they thought to be another type \nof hieroglyphs was a very advanced code — a highly advanced program language \nthey had never seen before.\n\n Yes, the students of Coventry University definitely know that feeling.")

            hiddenWord = str(input("\n\nIf you would like to know what happens next, type in the hidden word. \n"))
            if hiddenWord == ("PYTHON") or hiddenWord == ("Python") or hiddenWord == ("python"):
                print("\n The end.")
                  

#Robert: I feel like here we should give everyone an option to restart the 'game' and go for different choices and see the different outcomes. Probably links to loops again.

elif mainMenuSelection == (2):
    print("This game will present multiple paragraphs of text")
    #Have a look at this section, Henry
    print("where you will then have an option to decide on the branching narrative path")
    print("This application will ask for your input based on a numerical value before starting the new branch")
    
elif mainMenuSelection == (3):
    exit()
else:
    print("Please select a relevant number")
